{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "FileQC API",
    "description": "API for the FileQC project"
  },
  "schemes": [
    "https"
  ],
  "host": "localhost",
  "basePath": "/api-docs",
  "paths": {
    "/fileqcs": {
      "get": {
        "summary": "Get all FileQCs",
        "description": "Returns a list containing all FileQCs, including those that are pending. Must be filtered by project or by list of file SWIDs.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "description": "Filter by project (one of project or fileswid list is required)",
            "type": "string"
          },
          {
            "name": "fileswids",
            "in": "query",
            "description": "Filter by file SWIDs (comma-separated) (one of project or fileswid list is required)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FileQCs",
            "schema": {
              "$ref": "#/definitions/FileQCs-response"
            }
          },
          "404": {
            "description": "No files found for given project or file SWIDs",
            "schema": {
              "$ref": "#/definitions/Errors-response"
            }
          }
        }
      },
      "post": {
        "summary": "Add a single FileQC",
        "description": "Adds a single FileQC",
        "parameters": [
          {
            "name": "project",
            "description": "Project",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "fileswid",
            "in": "query",
            "description": "File SWID",
            "type": "integer",
            "required": true
          },
          {
            "name": "filepath",
            "in": "query",
            "description": "URL-escaped file path on disk, according to file provenance report",
            "type": "string",
            "required": true
          },
          {
            "name": "qcstatus",
            "in": "query",
            "description": "PASS or FAIL (PENDING not permitted)",
            "type": "string",
            "required": true
          },
          {
            "name": "username",
            "in": "query",
            "description": "Name of person QCing the file",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "query",
            "description": "URL-escaped reason why FileQC is PASS or FAIL",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "FileQC successfully created or updated",
            "schema": {
              "$ref": "#/definitions/FileQC-SWID-SWAs-with-errors"
            }
          },
          "400": {
            "description": "FileQC was not created or updated",
            "schema": {
              "$ref": "#/definitions/Errors-response"
            }
          }
        }
      }
    },
    "/fileqc/{fileswid}": {
      "get": {
        "summary": "Get a single FileQC",
        "description": "Returns a single FileQC for the given file SWID",
        "parameters": [
          {
            "name": "fileswid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "the file SWID"
          }
        ],
        "responses": {
          "200": {
            "description": "A FileQC",
            "schema": {
              "$ref": "#/definitions/FileQC-response-with-errors"
            }
          }
        }
      }
    },
    "/fileqcs/batch": {
      "post": {
        "summary": "Batch create or update FileQC records",
        "description": "Adds or updates FileQC records for the given items",
        "parameters": [
          {
            "in": "body",
            "name": "fileqcs",
            "description": "Array of FileQCs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileQC-request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created and/or updated FileQCs",
            "schema": {
              "$ref": "#/definitions/FileQCs-response-with-errors"
            }
          },
          "400": {
            "description": "Failures during save caused no FileQCs to be created or updated",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Errors-response": {
      "description": "Explanation of why operation failed",
      "type": "object",
      "properties": {
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQC-response": {
      "type": "object",
      "properties": {
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "qcstatus": {
          "description": "FileQC status (PASS, FAIL, PENDING)",
          "type": "string"
        },
        "username": {
          "description": "Name of person QCing the file (only returned if a FileQC record is found)",
          "type": "string"
        },
        "comment": {
          "description": "URL-escaped reason why FileQC is PASS or FAIL (only returned if a FileQC record is found and a comment was provided)",
          "type": "string"
        },
        "project": {
          "description": "Project",
          "type": "string"
        },
        "upstream": {
          "description": "List of input File SWAs (only returned if a File Provenance Report record is found)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skip": {
          "description": "Whether file is skipped in analysis",
          "type": "boolean"
        },
        "stalestatus": {
          "description": "Whether file has been superseded by a more recent version of the analysis (OKAY, STALE, NOT IN PROVENANCE)",
          "type": "string"
        }
      }
    },
    "FileQC-response-with-errors": {
      "type": "object",
      "properties": {
        "fileqc": {
          "$ref": "#/definitions/FileQC-response"
        },
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQCs-response-with-errors": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "$ref": "#/definitions/FileQCs-response"
        },
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQCs-response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FileQC-response"
      }
    },
    "FileQC-SWID-SWAs-with-errors": {
      "type": "object",
      "properties": {
        "fileqc": {
          "description": "FileQC",
          "type": "object",
          "properties": {
            "fileswid": {
              "description": "File SWID",
              "type": "integer"
            },
            "upstream": {
              "description": "Upstream input file SWAs",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        },
        "errors": {
          "description": "Empty array of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FileQC-request": {
      "type": "object",
      "properties": {
        "project": {
          "description": "Project",
          "type": "string"
        },
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "filepath": {
          "description": "URL-escaped file path on disk, according to file provenance report",
          "type": "string"
        },
        "qcstatus": {
          "description": "PASS or FAIL (PENDING not permitted)",
          "type": "string"
        },
        "username": {
          "description": "Name of person QCing the file",
          "type": "string"
        },
        "comment": {
          "description": "optional URL-escaped reason why FileQC is PASS or FAIL",
          "type": "string"
        }
      }
    }
  }
}
