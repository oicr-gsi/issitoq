{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "FileQC API",
    "description": "API for the FileQC project"
  },
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "paths": {
    "/available": {
      "get": {
        "summary": "Get available projects and workflows",
        "description": "Lists all projects and workflow names in File Provenance Report",
        "responses": {
          "200": {
            "description": "Lists of projects and workflow names in File Provenance Report",
            "schema": {
              "type": "object",
              "properties": {
                "projects": {
                  "description": "List of distinct projects in the File Provenance Report",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "workflows": {
                  "description": "List of distinct workflow names in the File Provenance Report",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fileqcs": {
      "get": {
        "summary": "Get all FileQCs",
        "description": "Returns a list containing all FileQCs, including those that are pending. Must be filtered by 'project' or 'fileswids', with optional 'qcstatus' and 'workflow' filters if 'project' is selected.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "description": "Filter by project short name",
            "type": "string"
          },
          {
            "name": "workflow",
            "in": "query",
            "description": "Filter by workflow name. Must be used with `project` query",
            "type": "string"
          },
          {
            "name": "qcstatus",
            "in": "query",
            "description": "Filter by qc status (PASS, FAIL, PENDING)",
            "type": "string"
          },
          {
            "name": "fileswids",
            "in": "query",
            "description": "Filter by file SWIDs (comma-separated)",
            "type": "string"
          },
          {
            "name": "showall",
            "in": "query",
            "description": "If 'true', will display all FileQCs for the retrieved file SWIDs (default is to display only the most recent FileQC)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FileQCs",
            "schema": {
              "$ref": "#/definitions/FileQCs-response"
            }
          },
          "404": {
            "description": "No files found for given project or file SWIDs",
            "schema": {
              "$ref": "#/definitions/Errors-response"
            }
          }
        }
      },
      "post": {
        "summary": "Add a single FileQC",
        "description": "Adds a single FileQC",
        "parameters": [
          {
            "name": "fileswid",
            "in": "query",
            "description": "File SWID",
            "type": "integer",
            "required": true
          },
          {
            "name": "qcstatus",
            "in": "query",
            "description": "PASS or FAIL (PENDING not permitted)",
            "type": "string",
            "required": true
          },
          {
            "name": "username",
            "in": "query",
            "description": "Name of person QCing the file",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "query",
            "description": "URL-escaped reason why FileQC is PASS or FAIL (optional)",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "FileQC successfully created",
            "schema": {
              "$ref": "#/definitions/FileQC-SWID-SWAs-with-errors"
            }
          },
          "400": {
            "description": "FileQC was not created",
            "schema": {
              "$ref": "#/definitions/Errors-response"
            }
          }
        }
      }
    },
    "/fileqc/{fileswid}": {
      "get": {
        "summary": "Get one or all FileQCs for the given file SWID",
        "description": "Returns either the most recent or all FileQC for the given file SWID",
        "parameters": [
          {
            "name": "fileswid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "the file SWID"
          },
          {
            "name": "showall",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "If 'true', will show all FileQCs for the given file SWID. If 'false' or absent, will show only the most recent FileQC."
          }
        ],
        "responses": {
          "200": {
            "description": "A FileQC",
            "schema": {
              "$ref": "#/definitions/FileQC-response-with-errors"
            }
          }
        }
      }
    },
    "/fileqcs/batch": {
      "post": {
        "summary": "Batch create FileQC records",
        "description": "Adds FileQC records for the given items",
        "parameters": [
          {
            "in": "body",
            "name": "fileqcs",
            "description": "Array of FileQCs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileQC-post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created FileQCs",
            "schema": {
              "$ref": "#/definitions/FileQCs-response-with-errors"
            }
          },
          "400": {
            "description": "Failures during save caused no FileQCs to be created",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      },
      "delete": {
        "summary": "Batch delete FileQC records",
        "description": "Deletes FileQC records given the FileQC IDs",
        "parameters": [
          {
            "in": "body",
            "name": "fileqcids",
            "description": "Array of FileQC IDs",
            "required": true
          },
          {
            "in": "body",
            "name": "username",
            "description": "Identifier for user who is deleting the FileQCs",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted at least some FileQCs (but not necessarily all)"
          }
        }
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Errors-response": {
      "description": "Explanation of why operation failed",
      "type": "object",
      "properties": {
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQC-response": {
      "type": "object",
      "properties": {
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "qcstatus": {
          "description": "FileQC status (PASS, FAIL, PENDING)",
          "type": "string"
        },
        "username": {
          "description": "Name of person QCing the file (only returned if a FileQC record is found)",
          "type": "string"
        },
        "comment": {
          "description": "URL-escaped reason why FileQC is PASS or FAIL (only returned if a FileQC record is found and a comment was provided)",
          "type": "string"
        },
        "project": {
          "description": "Project",
          "type": "string"
        },
        "qcdate": {
          "description": "QC Date (only returned if a FileQC record is found)",
          "type": "string"
        },
        "upstream": {
          "description": "List of input File SWAs (only returned if a File Provenance Report record is found)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skip": {
          "description": "Whether file is skipped in analysis (only returned if a File Provenance Reprot record is found)",
          "type": "boolean"
        },
        "stalestatus": {
          "description": "Whether file has been superseded by a more recent analysis (OKAY, STALE, NOT IN PROVENANCE)",
          "type": "string"
        }
      }
    },
    "FileQC-response-with-errors": {
      "type": "object",
      "properties": {
        "fileqc": {
          "$ref": "#/definitions/FileQC-response"
        },
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQCs-response-with-errors": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "$ref": "#/definitions/FileQCs-response"
        },
        "errors": {
          "$ref": "#/definitions/Errors"
        }
      }
    },
    "FileQCs-response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FileQC-response"
      }
    },
    "FileQC-SWID-SWAs-with-errors": {
      "type": "object",
      "properties": {
        "fileqc": {
          "description": "FileQC",
          "type": "object",
          "properties": {
            "fileswid": {
              "description": "File SWID",
              "type": "integer"
            },
            "upstream": {
              "description": "Upstream input file SWAs",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        },
        "errors": {
          "description": "Empty array of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FileQC-post": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fileswid": {
                "description": "File SWID",
                "type": "integer"
              },
              "qcstatus": {
                "description": "PASS or FAIL (PENDING not permitted)",
                "type": "string"
              },
              "username": {
                "description": "Name of person QCing the file",
                "type": "string"
              },
              "comment": {
                "description": "optional URL-escaped reason why FileQC is PASS or FAIL",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "FileQC-delete": {
      "type": "object",
      "properties": {
        "fileqcids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    }
  }
}
